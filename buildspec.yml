version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.9
    commands:
      # Log into Docker Hub (if pulling images from Docker Hub)
      - echo "Authenticating with Docker Hub"
      - export DOCKER_USERNAME=$(aws secretsmanager get-secret-value --secret-id DockerHubCredentials --query SecretString --output text | jq -r .DOCKERHUB_USERNAME)
      - export DOCKER_PASSWORD=$(aws secretsmanager get-secret-value --secret-id DockerHubCredentials --query SecretString --output text | jq -r .DOCKERHUB_TOKEN)
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  pre_build:
    commands:
      # Authenticate to ECR and set a fallback for IMAGE_TAG
      - echo "Logging into Amazon ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REPO_URI
      - IMAGE_TAG=$(date +%Y%m%d%H%M%S)
      - echo "IMAGE_TAG: $IMAGE_TAG"
  build:
    commands:ÃŸ
      - echo Build started on `date`
      - echo Building the Docker image...
      # Build the Docker image with the generated IMAGE_TAG
      - docker build -t $ECR_REPO_URI:$IMAGE_TAG .
      - docker tag $ECR_REPO_URI:$IMAGE_TAG $ECR_REPO_URI:latest
  post_build:
    commands:
      - echo Build completed on `date`
      # Authenticate to ECR
      - echo "Logging into Amazon ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REPO_URI      # Authenticate to ECR and set a fallback for IMAGE_TAG
      - echo "Logging into Amazon ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REPO_URI
      - echo Pushing the Docker image...
      # Push both the specific tag and the "latest" tag to ECR
      - docker push $ECR_REPO_URI:$IMAGE_TAG
      - docker push $ECR_REPO_URI:latest
      # Generate imageDetail.json for ECS deployment
      - echo Writing image definitions file...
      - printf '{"ImageURI":"%s"}' $ECR_REPO_URI:$IMAGE_TAG > imageDetail.json
      - cat imageDetail.json

artifacts:
  files:
    - imageDetail.json
  base-directory: .
